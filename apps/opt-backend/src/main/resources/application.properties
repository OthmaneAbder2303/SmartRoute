spring.application.name=demo
spring.docker.compose.enabled=false

server.port=8080
  0
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.autoconfigure.web=DEBUG
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG


spring.datasource.url=jdbc:postgresql://localhost:5432/smartroute
spring.datasource.username=smartuser
spring.datasource.password=smartuser
spring.datasource.driver-class-name=org.postgresql.Driver
spring.sql.init.platform=postgresql
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

jwt.secret=JHWn38fhQkLWmAHG92bq6NV9f93nFLq7

#spring.security.user.name=user
#spring.security.user.password=$2a$10$NDxu5QbhIfTPABRzG1M/x.iP81jqAY5ZNjvnyHRvn9Nuftv8xMrXm
#spring.security.user.roles=USER,ADMIN

spring.web.resources.add-mappings=true


# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile

spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.github.scope=user:email,read:user

# OAuth2 Redirect URI for frontend
app.oauth2.redirectUri=http://localhost:4200/oauth2/redirect
